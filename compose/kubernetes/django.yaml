apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: django
  namespace: test-ccdj
  name: django
spec:
  replicas: 1
  selector:
    matchLabels:
      service: django
  template:
    metadata:
      labels:
        service: django
    spec:
      containers:
      - args:
        - /start
        image: registry.digitalocean.com/aininjas-docker-registry/my_awesome_project_production_django
        name: django

        ports:
          - name: gunicorn
            containerPort: 5000
        envFrom:
          - configMapRef:
              name: envs-production-django
          - configMapRef:
              name: envs-production-postgres
          - secretRef:
              name: secrets-production-django
          - secretRef:
              name: secrets-production-postgres
        # env:
        env:
          - name: CELERY_BROKER_URL
            value: $(CELERY_BROKER_URL)


          - name: DATABASE_URL
            value: postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)



        resources:
          requests:
            cpu: "300m"
            memory: "1000M"
          limits:
            cpu: "400m"
            memory: "1000M"

        # volumeMounts:
        #   - mountPath: /app/gallery/media
        #     name: media-azurefile
        livenessProbe:
          httpGet:
            path: /health
            port: gunicorn
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 2
          failureThreshold: 2
        readinessProbe:
          httpGet:
            path: /health
            port: gunicorn
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 2
      restartPolicy: Always
      # volumes:
      #   - name: media-azurefile
      #     persistentVolumeClaim:
      #       claimName: media-azurefile
---
apiVersion: v1
kind: Service
metadata:
  namespace: test-ccdj
  name: django
  labels:
    service: django
spec:
  ports:
  - port: 5000
    targetPort: 5000
    name: http
  selector:
    service: django
