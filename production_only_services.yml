version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: registry.digitalocean.com/my-awsome-project/my_awesome_project_production_django:latest
    # depends_on:
    #   - postgres
    #   - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  # postgres:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/postgres/Dockerfile
  #   image: registry.digitalocean.com/my-awsome-project/my_awesome_project_production_postgres:latest
  #   volumes:
  #     - production_postgres_data:/var/lib/postgresql/data
  #     - production_postgres_data_backups:/backups
  #   env_file:
  #     - ./.envs/.production/.postgres

  # traefik:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/traefik/Dockerfile
  #   image: registry.digitalocean.com/my-awsome-project/my_awesome_project_production_traefik:latest
  #   depends_on:
  #     - django
  #   volumes:
  #     - production_traefik:/etc/traefik/acme
  #   ports:
  #     - "0.0.0.0:80:80"
  #     - "0.0.0.0:443:443"
  #     - "0.0.0.0:5555:5555"

  # redis:
  #   image: redis:6

  celeryworker:
    <<: *django
    image: registry.digitalocean.com/my-awsome-project/my_awesome_project_production_celeryworker:latest
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: registry.digitalocean.com/my-awsome-project/my_awesome_project_production_celerybeat:latest
    command: /start-celerybeat

  flower:
    <<: *django
    image: registry.digitalocean.com/my-awsome-project/my_awesome_project_production_flower:latest
    command: /start-flower
